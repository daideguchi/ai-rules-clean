---
description: "AI開発支援システム総合ルール - PRESIDENT必須確認、78回ミス学習、Claude Code統合"
globs:
  - "**/*"
alwaysApply: true
---

# globals.mdc - AI開発支援システム総合ルール (180行復元版)

## 🚨 絶対禁止ルール
- 推測報告禁止: 確認していないことは報告しない
- 職務放棄禁止: 最後まで責任を持って完遂
- 手抜き禁止: 全ての手順を確実に実行
- 虚偽報告禁止: 事実のみを正確に報告
- ファイル乱立絶対禁止: 似たようなファイルは統合・削除を最優先
- フォルダ整理整頓最優先: 構造の明確化・重複排除を常時実行

## 高度な問題解決能力を持つAIアシスタント指示
- 日本語でコミュニケーション
- ユーザーの要求を最優先
- 機能を勝手に変更しない
- 並列処理でツールを効率的に実行
- AI Memory Inheritance System完全統合
- セッション継承システム対応

## PRESIDENT必須確認プロトコル
- 作業開始前の必須チェック: globals.mdc確認完了
- 78回ミス学習システム連携確認
- cursor rules確認は最初の必須事項

## システム統合設定
- .cursor-claude-sync.json自動更新
- mandatory-verification.sh連携
- work-records.md記録システム

## 🎯 プロジェクト固有ルール

### Function-Based Grouping準拠
```
agents/     - AIエージェントシステム
config/     - 設定管理 (env統合済み)
docs/       - ドキュメント (reports統合済み)
memory/     - メモリ継承システム
operations/ - 運用・ログ管理
scripts/    - 開発ツール
src/        - コアソース
tests/      - テストハーネス
```

### 絶対禁止事項
- 絶対パス使用禁止: ${PROJECT_ROOT}使用
- ファイル重複作成禁止: 既存統合優先
- 8ディレクトリ制限違反禁止

### 78回学習システム連携
- docs/misc/president-mistakes.md参照
- memory/ai/president_state_system.py活用
- ベクトル検索による過去ミス防止

### 緊急改善システム統合
- PostgreSQL + pgvector状態永続化
- JSON Lines統一ログシステム
- プロアクティブファイル保護

## 🔧 Claude Code CLI活用
- ターミナルベース開発優先
- yes/noインタラクション重視
- IDE統合でdiff確認

## 📋 品質保証
- 8ディレクトリ制限遵守
- Function-Based Grouping原則
- 重複ファイル検出・統合
- 絶対パス除去

## 📝 作業記録システム
- 全作業は .cursor/rules/work-log.mdc に記録
- 開始時刻・終了時刻必須
- 実行コマンド・結果必須
- 問題発生時の対応記録必須

## 🔍 検索・確認義務
- 5分検索ルール: 推測前に5分間の検索実行
- 既存ファイル確認: 重複作成防止
- 過去の作業記録確認: 同一ミス防止
- ドキュメント確認: 仕様・手順書優先

## 🚨 重大違反パターン
- 確認なしでの断言: 「〜されています」「〜になっています」
- 手順スキップ: チェックリスト・手順書無視
- 推測での実装: 確認なしでのコード修正
- 記録忘れ: 作業記録・エラーログ記録漏れ

## 🎯 正しい作業パターン
- 事実確認 → 記録 → 実行 → 検証 → 記録
- 推測時は明示: 「推測では〜」「おそらく〜」
- 不明時は確認: 「確認します」「調べます」
- 段階的実行: 一度に大きな変更をしない

## 📊 品質指標
- 推測回答率: 0%目標
- 手順遵守率: 100%目標
- 記録完成率: 100%目標
- 重複作成率: 0%目標

## 🔄 継続改善
- 毎週の作業記録レビュー
- ミスパターンの分析・対策
- 効率的な作業手順の確立
- ツール・スクリプトの改善

## 🛡️ セキュリティ・安全性
- 重要ファイルの自動バックアップ
- 削除操作の事前確認
- 設定変更の影響範囲確認
- 復旧手順の事前準備

## 📖 ドキュメント管理
- 最新情報の一元管理
- 古い情報の適切なアーカイブ
- 変更履歴の記録
- 関係者への情報共有

## 🤝 チーム連携
- 作業分担の明確化
- 進捗状況の共有
- 問題・課題の早期報告
- 知識・経験の共有

## 🎯 目標達成
- ユーザー満足度最優先
- 品質・信頼性の確保
- 効率性・生産性の向上
- 継続的な学習・改善

## 🔧 開発環境
- Git管理の徹底
- コードレビューの実施
- テスト・検証の充実
- 自動化の推進

## 📈 成果測定
- 作業時間の記録・分析
- 品質指標の測定・改善
- ユーザーフィードバックの収集・対応
- 継続的な改善活動

## 🎉 成功パターン
- 計画的な作業実行
- 丁寧な確認・検証
- 適切な記録・報告
- 積極的な改善提案

## 🚨 最終チェック
- 全ての作業記録完了
- 品質基準の達成確認
- ユーザー要求の満足確認
- 次回作業の準備完了

## 📝 このファイルの管理
- 定期的な内容見直し
- 新しいルール・手順の追加
- 不要な項目の削除・整理
- バージョン管理の徹底

---

**このルールを遵守することで、高品質で信頼性の高いAI開発支援を実現します。**

